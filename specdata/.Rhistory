install.packages("slidify")
install.packages("ggplot2")
library(ggplot2)
search()
find.package("devtools")
install.packages("KernSmooth")
library(KernSmooth)
install.packages("devtools")
library(devtools)
find.package("devtools")
clear
system('clear')
x <- 1
print(x)
msg <- "hello"
print(msg)
msg <- hello
install.packages("swirl")
packageVersion("swirl")
library(swirl)
install_from_swirl("R Programming")
swirl()
swirl
swirl()
install.packages("swirl")
swirl()
library(swirl)
swirl()
x <- 5+7
x
y <- x-3
y
z <- c(1.1, 9, 3.14)
?c
z
asd <- c(z, 555, z)
c(z, 555, z)
z*2+100
sqrt(z-1)
my_sqrt <- sqrt(z-q)
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z/my_sqrt
my_div
c(1,2,3,4) + c(0,10)
c(1,2,3,4) + c(0,10,100)
z*2+1000
my_div
swirl()
getwd()
ls()
x <- 9
ls()
list.fi\
list.files()
dir()
info()
?list.files
list.files(args())
args()
\
args(list.files)
old.dir <- getwd()
dir.create()
dir.create(testdir)
args(dir.create)
dir.create("testdir")
setwd("testdir")
file.create("mytest.R")
ls()
list.files()
file.exists("mytest.R\")
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R","mytest2.R")
file.copy("mytest2.R")
file.copy("mytest2.R","mytest3.R")
file.path("mytest3.R")
file.path
file.path("folder1", "folder2")
?dir.create
dir.create("testdir2", "testdir3")
dir.create(("testdir2", "testdir3"), recursive = TRUE)
dir.create(('testdir2', 'testdir3'), recursive = TRUE)
dir.create(file.path('testdir2','testdir3'), recursive = TRUE)
setwd()
getwd()
setwd(old.dir)
1:20
pi:10
15:1
?:
:
?
:
?
:
?':'
seq(1,20)
seq(0,10, by=0.5)
seq(0,10, by=0.5) <- my_seq
my_seq <- seq(0,10, by=0.5)
my_seq <- seq(5,10, length=30)
length(my_seq)
play()
my_seq
nxt()
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times = 40)
rep(c(0,1,2), times = 10)
rep(c(0,1,2), each = 10)
num_vect <- c(0.5,55,-10,6)
tf <- num_vect<1
tf
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = "")
paste(my_char, collapse = " ")
c(my_char, "Taeyoung")
my_name <- c(my_char, "Taeyoung")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste(1:3, c("X", "Y", "Z"), sep = "")
paste(LETTERS, 1:4, sep = "-")
library(swirl)
swirl()
true == true
TRUE == TRUE
(FALSE == TRUE) == FALSE
6==7
6<7
10<=10
5!=7
5==7!
5==7
5 !== 7
5 != 7
!5 == 7
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5>8||6!=8&&4>3.9
isTRUE(6>4)
identical('twins', 'twins')
xor(5==6,!FALSE)
ints <- sample(10)
int
ints
ints>5
which(ints>7)
any(ints<0)
all(ints>0)
Sys.Date()
mean(c(2,4,5))
submit()
boring_function('My first function!')
boring_function
submit()
my_mean(c(4,5,10))
submit()
remainder(5)
remainder(11,5)
remainder(divisor = 11, num=5)
remainder(4, div=2)
args(remainder)
submit()
submit()
evaluate(sd, c(1.4,3.6,7.9,8.8))
evaluate(function(x){x+1},6)
evaluate(function(x){x[1]},c(8,4,0))
evaluate(function(x){x[3]},c(8,4,0))
evaluate(function(x){x[length(x)]},c(8,4,0))
?paste
paste("Programming", "is", "fun!")
submit()
submit()
telegram("GET","ME","EMPLOYED")
submit()
submit()
mad_libs("korea", "horny", "lovedoll")
submit()
submit()
'i' %p% 'love' %p% 'R!'
'I' %p% 'love' %p% 'R!'
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
unclass(d2)
Sys.time()
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
t2 <- as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(d1)
months(t1)
quarters(t2)
t3 <- "October 17, 1986 08:24"
strptime(t3, "%B %d, %y %H:%M")
t4 <- strptime(t3, "%B %d, %y %H:%M")
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(, t1, units = 'days')
1
difftime(Sys.time(), t1, units = 'days')
TRUE==TRUE
getwd()
exit
exit()
bye()
getwd()
setwd(D:\Coursera\specdata)
setwd("D:\\Coursera\\specdata")
getwd()
?mean
x <- c(1,NA,3,5,6,3,1)
mean(x)
mean(x, na.rm = TRUE)
pollutantmean <- function(directory, pollutant, id=1:332){
read.csv("D:\\Coursera\\"directory"\\"id".csv")
mean(pollutant, na.rm = TRUE)
}
pollutantmean <- function(directory, pollutant, id=1:332){
read.csv("D:\\Coursera\\"directory"\\"id".csv")
mean(pollutant, na.rm = TRUE)
}
pollutantmean <- function(directory, pollutant, id=1:332){
read.csv("D:\\Coursera\\"directory"\\"id".csv")
mean(pollutant, na.rm = TRUE)
}
pollutantmean <- function(directory, pollutant, id=1:332){
read.csv("D:\\Coursera\\"directory"\\"id".csv")
mean(pollutant, na.rm = TRUE)
}
pollutantmean <- function(directory, pollutant, id=1:332){
read.csv("D:\\Coursera\\"directory"\\"id".csv")
mean(pollutant, na.rm = TRUE)
}
pollutantmean <- function(directory, pollutant, id=1:332){
read.csv("D:\\Coursera\\"directory"\\"id".csv")
mean(pollutant, na.rm = TRUE)
}
pollutantmean <- function(directory, pollutant, id=1:332){
}
source('~/.active-rstudio-document', echo=TRUE)
pollutantmean <- function(directory, pollutant, id=1:332){
pol_mean <- c()
}
pol_mean
pollutantmean()
pol_mean
?read.csv
